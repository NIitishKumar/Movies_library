[{"/home/engineer/Desktop/Netflix/Front-end/src/index.js":"1","/home/engineer/Desktop/Netflix/Front-end/src/HomePage.js":"2","/home/engineer/Desktop/Netflix/Front-end/src/App.js":"3","/home/engineer/Desktop/Netflix/Front-end/src/auth/auth.js":"4","/home/engineer/Desktop/Netflix/Front-end/src/Register.jsx":"5","/home/engineer/Desktop/Netflix/Front-end/src/Component/Header.jsx":"6"},{"size":890,"mtime":1637731235000,"results":"7","hashOfConfig":"8"},{"size":8639,"mtime":1637758737000,"results":"9","hashOfConfig":"8"},{"size":1981,"mtime":1637671130000,"results":"10","hashOfConfig":"8"},{"size":279,"mtime":1637673591000,"results":"11","hashOfConfig":"8"},{"size":1961,"mtime":1637587746000,"results":"12","hashOfConfig":"8"},{"size":6463,"mtime":1637749470000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nnudcu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/engineer/Desktop/Netflix/Front-end/src/index.js",[],"/home/engineer/Desktop/Netflix/Front-end/src/HomePage.js",["29","30","31","32","33","34"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport Header from './Component/Header'\nimport ReactPaginate from 'react-paginate';\nimport Pagination from 'rc-pagination';\nimport Select from \"react-select\";\n\nfunction HomePage() {\n\n    const [movies, setmovies] = useState([])\n    const [readMore, setreadMore] = useState(true)\n    const [readText, setreadText] = useState('Read more')\n    const [year, setyear] = useState(2021)\n    const [pageNumber, setpageNumber] = useState(1)\n    const [totalPages, settotalPages] = useState(1)\n\n    const history = useHistory()\n\n    const logOutClick = () => {\n        localStorage.removeItem('token')\n        history.push('/')\n    }\n\n    useEffect(async () => {\n        \n        getMovies()\n    }, [])\n\n    const getMovies = async (e) => {\n        const movie = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=382f34cc02d16e668824d65efd1de969&primary_release_year=${year}&sort_by=revenue.desc&page=${pageNumber}`)\n        const res = await movie.json()\n        setmovies(res.results)\n        settotalPages(res.total_pages)\n    }\n\n    const readMoreClick = () => {\n        if (readMore == true) {\n            setreadMore(false)\n            setreadText('Read Less')\n        } else {\n            setreadMore(true)\n            setreadText('Read more')\n        }\n        \n    }\n\n    const handleSearch = async (e) => {\n        if (e.target.value[0] === ' ') {\n            e.target.value = ''\n        } else {\n            if (e.target.value) {\n                getMovies()\n            }\n        }\n        \n    }\n\n    const handleSelectChange = async (e) => {\n        setyear(e.value)\n        const movie = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=382f34cc02d16e668824d65efd1de969&primary_release_year=${year}&sort_by=revenue.desc&page=${pageNumber}`)\n        const res = await movie.json()\n        setmovies(res.results)\n        settotalPages(res.total_pages)\n    }\n\n    const handlePageClick = async (e) => {\n        // getMovies(e.selected);\n        setpageNumber(e.selected)\n        const movie = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=382f34cc02d16e668824d65efd1de969&primary_release_year=${year}&sort_by=revenue.desc&page=${e.selected + 1}`)\n        const res = await movie.json()\n        setmovies(res.results)\n    }\n\n    return (\n        \n        <>\n            <Header handleSearch={handleSearch} />\n            <div class=\"container\" style = {{width:'20%'}} >\n                <div class=\"row\">\n                    <div class=\"col-sm\"></div>\n                    <Select\n                        class=\"form-select\"\n                    // value={}\n                        onChange={handleSelectChange}\n                        options={[\n                        { value: 2021, label: 2021 },\n                        { value: 2019, label: 2019 },\n                        { value: 2018, label: 2018 }\n                                ]}\n                        placeholder=\"Select Category...\"\n                    />\n                    </div>\n                </div>\n            <section class=\"text-gray-600 body-font\">\n                        <div class=\"container px-5 py-24 mx-auto\">\n                        <div class=\"flex flex-wrap -m-4\">\n                        {movies.map(x => {\n                                return <>\n                                        <div class=\"p-4 md:w-1/3\">\n                                            <div class=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\n                                            <img class=\"lg:h-48 md:h-36 w-full object-cover object-center\" src={`https://image.tmdb.org/t/p/original${x.poster_path}`} alt=\"blog\"/>\n                                            <div class=\"p-6\">\n                                                <h2 class=\"tracking-widest text-xs title-font font-medium text-gray-400 mb-1\">CATEGORY</h2>\n                                                <h1 class=\"title-font text-lg font-medium text-gray-900 mb-3\">{x.original_title}</h1>\n                                                <p class=\"leading-relaxed mb-3\">{readMore ? (x.overview).substring(1, 70) : (x.overview)}<br/> <br/> <button type='button' className='btn btn-info btn-sm' onClick={readMoreClick}>{ readText}</button> </p>\n                                                <div class=\"flex items-center flex-wrap \">\n                                                {/* <a class=\"text-indigo-500 inline-flex items-center md:mb-2 lg:mb-0\">Learn More\n                                                    <svg class=\"w-4 h-4 ml-2\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                                                    <path d=\"M5 12h14\"></path>\n                                                    <path d=\"M12 5l7 7-7 7\"></path>\n                                                    </svg>\n                                                </a> */}\n                                                <span class=\"text-gray-400 mr-3 inline-flex items-center mt-3 leading-none text-sm pr-3 py-1 border-r-2 border-gray-200\">\n                                                    <h2 class=\"tracking-widest text-xs title-font font-medium text-gray-400 mb-1\">Rating {x.vote_average }/10</h2>\n                                                </span>\n                                                <span class=\"text-gray-400 mr-3 inline-flex items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-200\">\n                                                    <svg class=\"w-4 h-4 mr-1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                                                    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n                                                    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                                                    </svg>{x.vote_count > 900 ? `${(x.vote_count / 1000).toFixed(1)}K` : Math.floor(x.vote_count)}\n                                                </span>\n                                                <span class=\"text-gray-400 inline-flex items-center leading-none text-sm\">\n                                                    <svg class=\"w-4 h-4 mr-1\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" viewBox=\"0 0 24 24\">\n                                                    <path d=\"M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z\"></path>\n                                                    </svg>6\n                                                </span>\n                                                </div>\n                                            </div>\n                                            </div>\n                                        </div>\n                                    </>\n                            })}\n                        </div>\n                    </div>\n                </section>\n                <div class=\"d-flex justify-content-center d-flex align-items-center\">\n                        <ReactPaginate\n                        breakLabel=\"...\"\n                        nextLabel=\"next >\"\n                        onPageChange={handlePageClick}\n                        pageRangeDisplayed={3}\n                        pageCount={totalPages}\n                        previousLabel=\"< previous\"\n                        renderOnZeroPageCount={null}\n                        previousLabel=\"Previous\"\n                        nextLabel=\"Next\"\n                        pageClassName=\"page-item\"\n                        pageLinkClassName=\"page-link\"\n                        previousClassName=\"page-item\"\n                        previousLinkClassName=\"page-link\"\n                        nextClassName=\"page-item\"\n                        nextLinkClassName=\"page-link\"\n                        breakClassName=\"page-item\"\n                        breakLinkClassName=\"page-link\"\n                        marginPagesDisplayed={4}\n                        containerClassName=\"pagination\"\n                        activeClassName=\"active\"\n                        />\n                    </div>\n                    < button className = 'btn btn-primary' onClick = { logOutClick } > Log Out</button >\n            </>\n    )\n}\n\nexport default HomePage\n","/home/engineer/Desktop/Netflix/Front-end/src/App.js",["35","36","37"],"import './App.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { useState, useEffect } from 'react'\nimport {BrowserRouter} from 'react-router-dom';\n\nfunction App() {\n\n  const [userData, setuserData] = useState({})\n  const history = useHistory()\n  const token = localStorage.getItem('token')\n  \n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n        history.push('/homePage')\n      }\n  }, [])\n  \n  if (token) {\n    axios.post('http://localhost:5000/token_login', { token }).then(res => {\n      if (res.data.email) {\n      }\n    })\n  }\n\n  const handleSubmit = () => {\n    axios.post('http://localhost:5000/login', userData).then(res => {\n      console.log(res.data.status);\n      if (res.data.status == 1) {\n        console.log('dsgsaf');\n        history.push('/homePage')  \n      } else {\n        alert('Email Not Registered !')\n      }\n    })\n  }\n\n  const handleChange = (e) => {\n    setuserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  return (\n    <div className='container' >\n      <br/>\n      <form onSubmit={(e) => {\n        e.preventDefault()\n        handleSubmit()\n      }\n      } >\n        <div className='form-group'>\n          <label for='inputEmail' >Email address</label>\n          <input type='email' id='inputEmail' aria-describedby=\"emailHelp\" name='email' onChange = {handleChange} class=\"form-control\" placeholder=\"Enter Email\"></input>\n        </div>\n        <br/>\n        <div className=\"form-group\">\n          <label for='inputPassword'>Enter Password</label>\n          <input className=\"form-control\" type='password' id=\"inputPassword\" name='password' onChange = {handleChange} placeholder=\"Enter Password\"></input>\n        </div><br/>\n        <button type=\"submit\" className=\"btn btn-primary  \">Submit</button>\n      </form><br/>\n        <a href=\"/register\" ><button type=\"submit\" className=\"btn btn-primary  \">Register</button></a>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/home/engineer/Desktop/Netflix/Front-end/src/auth/auth.js",[],"/home/engineer/Desktop/Netflix/Front-end/src/Register.jsx",[],"/home/engineer/Desktop/Netflix/Front-end/src/Component/Header.jsx",["38","39","40","41","42","43","44","45","46","47"],"import React from 'react'\n\nfunction Header({handleSearch}) {\n    return (\n        <nav class=\"bg-gray-800\">\n        <div class=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div class=\"relative flex items-center justify-between h-16\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                <button type=\"button\" class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\" aria-controls=\"mobile-menu\" aria-expanded=\"false\">\n                <span class=\"sr-only\">Open main menu</span>\n                <svg class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                </svg>\n                <svg class=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n                </button>\n            </div>\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div class=\"flex-shrink-0 flex items-center\">\n                {/* <img class=\"block lg:hidden h-8 w-auto\" src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\" alt=\"Workflow\"/> */}\n                {/* <img class=\"hidden lg:block h-8 w-auto\" src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\" alt=\"Workflow\"/> */}\n                </div>\n                <div class=\"hidden sm:block sm:ml-6\">\n                <div class=\"flex space-x-4\">\n                    <a href=\"#\" class=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\" aria-current=\"page\">Letest Movies</a>\n\n                    <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Team</a>\n\n                    <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Projects</a>\n\n                    <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Calendar</a>\n                    <input type='text' className='movieSearch' onChange={handleSearch} placeholder='Search' style={{marginLeft:'350px', paddingLeft : '20px', border : '0'}} />\n                    <button className='btn btn-success search-button space-x-0' style={{ marginLeft: '-50px', borderRadius: '0 10px 10px 0' }} >Search</button>\n                </div>\n                </div>\n                </div>\n                    <div class=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0 \">\n                        <button type=\"button\" class=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                        <span class=\"sr-only\">View notifications</span>\n                        <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n                        </svg>\n                        </button>\n\n                        {/* <!-- Profile dropdown --> */}\n                        <div class=\"ml-3 relative\">\n                        <div>\n                            <button type=\"button\" class=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\" id=\"user-menu-button\" aria-expanded=\"false\" aria-haspopup=\"true\">\n                            <span class=\"sr-only\">Open user menu</span>\n                            <img class=\"h-8 w-8 rounded-full\" src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\" alt=\"\"/>\n                            </button>\n                        </div>\n                        {/* <div class=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu-button\" tabindex=\"-1\">\n                            <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-0\">Your Profile</a>\n                            <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-1\">Settings</a>\n                            <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-2\">Sign out</a>\n                        </div> */}\n                        </div>\n                    </div>\n                    <a>{' '}</a><a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\" style={{position: 'absolute', right: '-15%'}} >LogOut</a>\n                            {/* <button className='btn btn-primary btn-sm ' style={{marginLeft : '2%'}} > Log Out</button> */}\n            </div>\n        </div>\n\n        <div class=\"sm:hidden\" id=\"mobile-menu\">\n            <div class=\"px-2 pt-2 pb-3 space-y-1\">\n            <a href=\"#\" class=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\" aria-current=\"page\">Dashboard</a>\n\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">Team</a>\n\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">Projects</a>\n\n            <a href=\"#\" class=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\">Calendar</a>\n            </div>\n        </div>\n</nav>\n    )\n}\n\nexport default Header\n",{"ruleId":"48","severity":1,"message":"49","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":25,"column":15,"nodeType":"54","endLine":28,"endColumn":6},{"ruleId":"52","severity":1,"message":"55","line":28,"column":8,"nodeType":"56","endLine":28,"endColumn":10,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":38,"column":22,"nodeType":"60","messageId":"61","endLine":38,"endColumn":24},{"ruleId":"62","severity":1,"message":"63","line":146,"column":25,"nodeType":"64","endLine":146,"endColumn":49},{"ruleId":"62","severity":1,"message":"63","line":147,"column":25,"nodeType":"64","endLine":147,"endColumn":41},{"ruleId":"48","severity":1,"message":"65","line":5,"column":9,"nodeType":"50","messageId":"51","endLine":5,"endColumn":22},{"ruleId":"52","severity":1,"message":"66","line":17,"column":6,"nodeType":"56","endLine":17,"endColumn":8,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"59","line":29,"column":27,"nodeType":"60","messageId":"61","endLine":29,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":26,"column":21,"nodeType":"70","endLine":26,"endColumn":125},{"ruleId":"68","severity":1,"message":"69","line":28,"column":21,"nodeType":"70","endLine":28,"endColumn":131},{"ruleId":"68","severity":1,"message":"69","line":30,"column":21,"nodeType":"70","endLine":30,"endColumn":131},{"ruleId":"68","severity":1,"message":"69","line":32,"column":21,"nodeType":"70","endLine":32,"endColumn":131},{"ruleId":"68","severity":1,"message":"71","line":61,"column":21,"nodeType":"70","endLine":61,"endColumn":24},{"ruleId":"68","severity":1,"message":"69","line":61,"column":33,"nodeType":"70","endLine":61,"endColumn":190},{"ruleId":"68","severity":1,"message":"69","line":68,"column":13,"nodeType":"70","endLine":68,"endColumn":125},{"ruleId":"68","severity":1,"message":"69","line":70,"column":13,"nodeType":"70","endLine":70,"endColumn":131},{"ruleId":"68","severity":1,"message":"69","line":72,"column":13,"nodeType":"70","endLine":72,"endColumn":131},{"ruleId":"68","severity":1,"message":"69","line":74,"column":13,"nodeType":"70","endLine":74,"endColumn":131},"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.","ArrayExpression",["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'BrowserRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [getMovies]",{"range":"78","text":"79"},"Update the dependencies array to be: [history]",{"range":"80","text":"81"},[805,807],"[getMovies]",[436,438],"[history]"]